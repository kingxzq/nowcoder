//把字符串装换成整数
class Solution {
public:
    int StrToInt(string str) {
        int flag = 1;
        long long ret = 0;
        if (str[0] == '-') flag = -1;
        else if (str[0] != '+' && (str[0] < '0' || str[0]>'9')) return 0;

        int n = str.size();
        for (int i = (str[0] == '-' || str[0] == '+') ? 1 : 0; i < n; i++) {
            if (str[i] >= '0' && str[i] <= '9') ret = ret * 10 + (str[i] - '0');
            else return 0;
        }
        if (n >= 10 && ret > INT_MAX)
            return 0;
        else
            return (int)ret * flag;
    }
};

//不要二
#include <iostream>
using namespace std;

int main() {
    int W, H;
    cin >> W >> H;
    cout << W * H / 2 + (!(W * H % 4) ? 0 : (W % 2 == 0 && H % 2 == 0) ? 2 : 1) << endl;
    //W*H/2 格子数的一半，先两个格子放一个蛋糕
    //W*H%4 剩下格子的一半，若能被整除，就不再填充
    //若不能，则可以继续填充，宽度和高度都能被2整除就说明有剩余格子2个，不能整除，至多只有一个
}
